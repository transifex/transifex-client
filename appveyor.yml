branches:
  only:
    - my_test_branch

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

matrix:
  fast_finish: true

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"
  - "pip install pyinstaller"

  # Set up the project in develop mode. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - pip install -e .

build_script:
  # Build the compiled extension
  #- "%CMD_IN_ENV% python setup.py build"
  - pyinstaller contrib/tx.spec

test_script:
  # Run the project tests
  #- "%CMD_IN_ENV% python setup.py nosetests"
  - bash contrib/test_win_build.sh

after_test:
  # If tests are successful, create binary packages for the project.
  #- "%CMD_IN_ENV% python setup.py bdist_wheel"
  #- "%CMD_IN_ENV% python setup.py bdist_wininst"
  #- "%CMD_IN_ENV% python setup.py bdist_msi"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
